---
import { categories } from "../../data/filters";
import { projects } from "../../data/proyects";
---

<div class="categories-container">
	<h2 class="title">Categorias</h2>
	<div class="categories">
		{
			categories.map((category) => (
				<label for={category.name} class="category">
					<input
						type="radio"
						name="category"
						class="radioCategory"
						id={category.name}
						value={category.name}
					/>
					{category.icon && <category.icon class="icon" />}
					{category.name}
					<span class="count">
						(
						{category.value === "all"
							? projects.length
							: projects.filter((project) => project.category === category.value).length}
						)
					</span>
				</label>
			))
		}
	</div>
</div>

<script>
	import { categorySelected } from "../../store/store";

	const radioCategory = document.querySelectorAll(".radioCategory");
	const labels = document.querySelectorAll(".category");
	labels[0].classList.add("category-checked");

	const handleCategoryChange = (e: Event) => {
		const value = (e.target as HTMLInputElement).value;
		categorySelected.set(value);
		labels.forEach((label) => {
			label.classList.remove("category-checked");
		});
		(e.target as HTMLInputElement).parentElement?.classList.add("category-checked");
		console.log(value);
	};
	radioCategory.forEach((radio) => {
		radio.addEventListener("change", handleCategoryChange);
	});
</script>

<style>
	.categories-container {
		display: flex;
		flex-direction: column;
	}
	.categories {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(130px, 1fr));
		gap: 0.5rem;
		padding: 0;
	}

	.title {
		font-size: 1em;
		margin: 0.5em 0;
		font-weight: 500;
		color: var(--color-text);
	}

	label {
		display: flex;
		align-items: center;
		flex-direction: column;
		gap: 0.1rem;
		font-size: 0.85rem;
		position: relative;
		padding: 0.25rem 0.5rem;
		border-radius: var(--radius-xs);
		background: linear-gradient(
			135deg,
			var(--color-surface-secondary),
			var(--color-surface),
			var(--color-surface-secondary)
		);
		border: 1px solid var(--color-border);
		box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
		color: var(--color-text);
		cursor: pointer;
		transition: all 0.3s ease;

		&:hover:not(.category-checked) {
			background: linear-gradient(
				135deg,
				var(--color-surface-secondary-hover),
				var(--color-surface-hover),
				var(--color-surface-secondary-hover)
			);
			color: var(--color-text);
			border-color: var(--color-border-hover);
		}
	}

	.icon {
		width: 1.1rem;
		height: 1.1rem;
		color: var(--color-text);
	}

	.count {
		font-size: 0.7rem;
		color: var(--color-text-secondary);
	}

	.category-checked {
		background: linear-gradient(
			135deg,
			var(--color-accent-opacity),
			var(--color-hover-opacity),
			var(--color-accent-opacity)
		);
		color: var(--color-text);
		border-color: var(--color-accent);
	}

	input[type="radio"] {
		position: absolute;
		top: 0;
		left: 0;
		opacity: 0;
	}

	input[type="radio"]:checked + label {
		background-color: red;
		color: var(--color-text);
	}
</style>
